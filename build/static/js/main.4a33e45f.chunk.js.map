{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["MoneyContainer","React","useState","money","setMoney","MoneyPrinter","qty","actives","Mint","Birthday","upgradeObject","setUpgrades","birthday","setBirthday","containerRef","useRef","addMoney","Size","Math","floor","random","XPos","element","document","getElementById","offsetWidth","getContainerWidth","currentMoney","AnimatedMoney","x","y","height","width","length","console","log","ref","id","className","UpgradesDrawer","subtractMoney","subtractAmount","newArray","splice","style","margin","fontSize","fontWeight","onClick","map","MoneyComp","useDisclosure","isOpen","onOpen","onClose","colorScheme","placement","display","flexDirection","interval","setInterval","currentUpgrades","props","visible","setVisible","useEffect","setTimeout","spring","useSpring","top","from","config","mass","tension","friction","svg","position","transform","left","round","color","fill","Fragment","bottom","duration","spring2","to","opacity","delay","div","zIndex","alt","src","backgroundColor","justifyContent","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4a33e45f.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport LocalAtmTwoToneIcon from \"@material-ui/icons/LocalAtmTwoTone\";\nimport {\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport MonetizationOnTwoToneIcon from \"@material-ui/icons/MonetizationOnTwoTone\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport CakeIcon from \"@material-ui/icons/Cake\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MoneyContainer />\n    </div>\n  );\n}\n\ninterface Upgrades {\n  MoneyPrinter: { qty: number; actives: NodeJS.Timeout[] };\n  Mint: { qty: number; actives: NodeJS.Timeout[] };\n  Birthday: { qty: number };\n}\n\nconst getInitalUpgrades = (): Upgrades => {\n  return {\n    MoneyPrinter: { qty: 0, actives: [] },\n    Mint: { qty: 0, actives: [] },\n    Birthday: { qty: 0 },\n  };\n};\n\nfunction MoneyContainer() {\n  const [money, setMoney] = React.useState<JSX.Element[]>([]);\n  const [upgradeObject, setUpgrades] = React.useState<Upgrades>(getInitalUpgrades());\n  const [birthday, setBirthday] = React.useState(false);\n  const containerRef = React.useRef(null);\n\n  function getContainerWidth(): number {\n    const element = document.getElementById(\"moneyContainer\");\n    if (element !== null) {\n      return element.offsetWidth;\n    } else return 0;\n  }\n\n  const addMoney = () => {\n    const Size = Math.floor(Math.random() * 100 + 50);\n    const XPos = Math.floor(Math.random() * getContainerWidth() - Size / 2);\n\n    setMoney((currentMoney) => [\n      ...currentMoney,\n      <AnimatedMoney key={money.length} x={XPos} y={0} height={Size} width={Size} />,\n    ]);\n  };\n\n  const subtractMoney = (subtractAmount: number) => {\n    setMoney((currentMoney) => {\n      let newArray = currentMoney;\n      newArray.splice(0, subtractAmount);\n      return newArray;\n    });\n  };\n\n  console.log(upgradeObject);\n\n  if (birthday) return <Birthday />;\n  return (\n    <div ref={containerRef} id=\"moneyContainer\" className=\"moneyContainer\">\n      <UpgradesDrawer\n        setUpgrades={setUpgrades}\n        money={money}\n        addMoney={addMoney}\n        subtractMoney={subtractMoney}\n        setBirthday={setBirthday}\n      />\n      <div style={{ margin: \"1rem\", fontSize: \"large\", fontWeight: \"bold\" }}>\n        Money: {money.length}\n      </div>\n      <Button onClick={addMoney}>Click Me</Button>\n      {money.map((MoneyComp) => MoneyComp)}\n    </div>\n  );\n}\n\ninterface UpgradesProps {\n  setUpgrades: React.Dispatch<React.SetStateAction<Upgrades>>;\n  money: JSX.Element[];\n  addMoney: () => void;\n  subtractMoney: (subtractAmount: number) => void;\n  setBirthday: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nfunction UpgradesDrawer({\n  setUpgrades,\n  money,\n  addMoney,\n  subtractMoney,\n  setBirthday,\n}: UpgradesProps) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const handleMoneyPrinter = () => {\n    if (money.length >= 50) {\n      subtractMoney(50);\n      const interval = setInterval(() => {\n        addMoney();\n      }, 5000);\n      setUpgrades((currentUpgrades) => {\n        return {\n          ...currentUpgrades,\n          MoneyPrinter: {\n            qty: currentUpgrades.MoneyPrinter.qty + 1,\n            actives: [...currentUpgrades.MoneyPrinter.actives, interval],\n          },\n        };\n      });\n    }\n  };\n\n  const handleMint = () => {\n    if (money.length >= 250) {\n      subtractMoney(250);\n      const interval = setInterval(() => {\n        addMoney();\n      }, 1000);\n      setUpgrades((currentUpgrades) => {\n        return {\n          ...currentUpgrades,\n          Mint: {\n            qty: currentUpgrades.Mint.qty + 1,\n            actives: [...currentUpgrades.Mint.actives, interval],\n          },\n        };\n      });\n    }\n  };\n\n  const handleBirthday = () => {\n    if (money.length >= 1) {\n      setBirthday(true);\n    }\n  };\n\n  return (\n    <>\n      <Button colorScheme=\"teal\" onClick={onOpen}>\n        Upgrades\n      </Button>\n      <Drawer isOpen={isOpen} placement=\"right\" onClose={onClose}>\n        <DrawerOverlay>\n          <DrawerContent>\n            <DrawerCloseButton />\n            <DrawerHeader>Upgrades - ${money.length}</DrawerHeader>\n            <DrawerBody>\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                Money Printer - $50\n                <Button onClick={handleMoneyPrinter}>\n                  <PrintIcon />\n                </Button>\n              </div>\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                Mint - $250\n                <Button onClick={handleMint}>\n                  <AccountBalanceIcon />\n                </Button>\n              </div>\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                Happy Birthday - $1000\n                <Button onClick={handleBirthday}>\n                  <CakeIcon />\n                </Button>\n              </div>\n            </DrawerBody>\n          </DrawerContent>\n        </DrawerOverlay>\n      </Drawer>\n    </>\n  );\n}\n\ninterface MoneyProps {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nfunction AnimatedMoney(props: MoneyProps) {\n  const [visible, setVisible] = React.useState<boolean>(true);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      setVisible(false);\n    }, 1500);\n  });\n\n  const spring = useSpring({\n    top: \"100%\",\n    from: { top: \"0%\" },\n    config: { mass: 1, tension: 180, friction: 12 },\n  });\n\n  if (!visible) {\n    return <React.Fragment />;\n  } else\n    return (\n      <animated.svg\n        style={{\n          position: \"absolute\",\n          transform: `translateY(-${props.height}px)`,\n          left: props.x,\n          width: `${props.width}px`,\n          height: `${props.height}px`,\n          ...spring,\n        }}\n      >\n        {Math.round(Math.random()) ? (\n          <LocalAtmTwoToneIcon style={{ color: \"green\", fill: \"green\" }} />\n        ) : (\n          <MonetizationOnTwoToneIcon style={{ color: \"gold\", fill: \"gold\" }} />\n        )}\n      </animated.svg>\n    );\n}\n\nfunction Birthday() {\n  const spring = useSpring({\n    bottom: \"100%\",\n    from: { bottom: \"-100%\" },\n    config: { duration: 2000 },\n  });\n\n  const spring2 = useSpring({\n    to: { opacity: \"1\" },\n    from: { opacity: \"0\" },\n    delay: 2100,\n    config: { mass: 1, tension: 280, friction: 60 },\n  });\n\n  return (\n    <div className=\"birthdayWrapper\">\n      <animated.div style={{ zIndex: 50, position: \"absolute\", ...spring }}>\n        <img alt=\"balloons\" src=\"balloon.png\" />\n      </animated.div>\n      <animated.div\n        style={{\n          backgroundColor: \"#e63946\",\n          color: \"#f1faee\",\n          display: \"flex\",\n          height: \"100%\",\n          width: \"100%\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          ...spring2,\n        }}\n      >\n        🥳 Happy Birthday Dad! 🎂\n      </animated.div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}